DogeBot-Changelog:

11-08-2020 - 5: 
    -Initial set up


12-08-2020 - 10:
    -Implemented JSON file that lists active Giveaways
    -Implemented functional !giveaway and !nextrade commands
    -There is a bug that makes the bot crash if !nextrade is spammed:
        (possiblefix)-Implementing a cooldown function.
    

13-08-2020 -6:
    -Manually starting the bot each time the code is edited has proven to not give any bot crashes, even with this being observed !nextrade needs a cooldown to ensure the bot does not break while being developed.
    -Implemented a !kill command.
    -Implemented a MasterID.json file that allows only me to use owner/admin commands!
    -Started to work on an update that allows giveaways.js to give more than one pokemon at a time, this should change the array inside giveaway.json as well as the const MSG.
    - The command !giveaway was changed to !ga due to:
        -Reaching the conclusion that the bot could not write giveaways for more than one host at a time.
        -This was only the base of a command with locked interaction meaning that only users the admin gives access to can use that command, with this maybe I can create a flag that makes the bot report to me and/or a mod of a server.
    - The folder gajson was created to create individual files for any user to use the !ga command.
    -!ga and !nextrade are now able to be used by multiple users.
    -The command !giveaway now only allows users that have their id's stored into users.json interact with the bot.


14-08-2020 -21:30 -> 2:30 - total:26:
    -Finalized the setup part of the giveaway command.
    -*almost* finished !giveaway structure and outputs, things to still do:
    -use the same method used to store the info on the giveaway for the info of the users giveaway.(for the nextrade command)
    -get rid of that annoying comma issue that outputs an comma in the output of the command.(possibly will have to live with this in the meanwhile)
    -make a rules module, with a basic rules(maybe with the same json method being used but for now a fixed one and not a flexible one)
    - find a way to add users to the array with a seperate command possibly.


15-08-2020 -23:00 -> 2:00 -total: 29:
    -started to work on a !add command to allow users to the bot.


17-08-2020- 10h total: 39: 
    -Created a mongoDB database to store the users allowed to use the bot, with this I can now try to succecsfully implement the !add command.
    -This will however need to result in a change in the curent way to check if the user is allowed to use the bot or not.(DONE)
    - !add command now succecsfully inserts the tagged user into the database.


18-08-2020- start: 15:30->19:45 (4:15)--> 21:00 -> 3:45 (6:45)  total:11 -> 50:
    -Added finishing details to !add, so that when I add an user the host param will return true, when running commands that require this param to be true.
    -Created an checkUser.js file to check if the user is allowed to use commands that require this. The logic will be:
        -if host === true -> user will be allowed to use the command.
        -if host === false -> user will be warned that he cannot use the bot and will increase flags by one.
        -if flags >= 10 -> user will be blocked from using the bot, making the bot either not respond to him or it will mention me/mod that said user is trying to use the bot after trying to use it while not allowed to.
    - checkUser() is now fully built and with a caching system for the user.
    -Created two new functions inside user.js called:
        1 -> flagUser() to flag the user when he tries to use the bot without permission.
        2 -> blockUser() to block the user from using the bot.
    -When trying to add cache to the flag function it breakes the bot. -> (FIXED)


19-08-2020 start-14:00 -> 20:00 total:56h :
    -created a new function to check how many flags a user has inside user.js called flagCheck().
    -Also created a new flagUser function to increase the flags after they've been checked, called flagUser().
    -The bot now flags users for using commands they are not allowed to, and bans them after 10 flags, if the user keeps trying to use those commands me and DonaldD will be notified of that.
    -Started to work on !ntrade to use after setting up !giveaway, bugs so far:
            -Cannot check if the giveaway as any remaining pokemon. (FIXED)
            - if the giveaway has ended and the user wants to start a new one it does not reset the statusCheck to true, only a bot restart fixes this issue. (TO FIX)

21-08-2020 15h over 3days total: 71 :
    -Restarted to work on !giveaway and on !ntrade so that I have global funcitons declared on giveaway.js so that the code can be cleaner and to see if this fixes the bot restart issue.
    -Found a bug previously found a previously found bug where the function that is suposed to check the status of the giveaway.
    -cleaned all the extra files inside the dir to an seperate folder to be deleted since most of those files are previous versions of the curent ones.

22-08-2020 start 14:30 --> 19:30 total: 76:
    - created a !block command to manually block users.
    - added a check to when ever a user gets blocked so that the cached check gets refreshed after manually blocking a user.
    - started to look into the bugs found on day 19/08, info so far:
        - if the user starts up a new giveaway after finishing an old one it only pushes the mon quantity and status into the JSON file, meaning the mon name is missing and that breaks the bot. (FIXED)
        - if the user keeps trying to add mons to the JSON file eventually it will only have the status arg. (FIXED)
        - if user is tries to publish a new giveaway after an older one is set to false statusCheck is set to false instead of true. (FIXED)
        - if a user ends a giveaway and sets a new one up the command '!ga start' will publish the old layout instead of the new one, only a bot restart fixes this. (TO FIX):
            -info on this bug so far:
                -setMsg() stores the layout while the bot is running
                -changing this function might fix this issue, so far I have no idea on what change might fix this.
    - created a base layout for non host commands in !ping that does not allow the user to use the command if he has been blocked.(ONLY A BOT RESTART CHECKS FOR BLOCKS, BLOCKED USERS ARE BLOCKED FOR GOOD).
    - found a new bug:
        -if the list has multiple pokemon the '!ntrade [monName]' command does not status check the giveaway when the input is sent like it does for single pokemon.(FIXED)
            -POSSIBLE FIX: 
                - Implementing a function to check for the individual status of the pokemon chosen and that outputs true or false.
                - If the output is true it will post the giveaway again;
                - If the output is false it will prompt the user saying he no longer has anymore of that specific pokemon left.
        - While trying to fix the above mentioned bug I found a new bug where it does not set the satus of the mon to false when trying to host a giveaway with multiple pokemon. (FIXED)


23-08-2020 start 20:00 -> 1:00 total:81 :
    - Fixed the issue where the !ntrade command would not set the mon status to false found yesterday.
    - Implemented a function to check the status of each pokemon when they are selected, with this !ga and !ntrade are now fully flexible to one or how many individual pokemon the user wishes to giveaway.
    - started to implement a cooldown function for commands.
    - created a !help command, but this needs adjustment so that it does not show commands that users dont have access to.

24-08-2020 start 14:00 -> 20:00(6) --> 21:00 ->3:00 total: 94:
    -continued to work on !help, the idea for this command is:
        - it checks for blocks before, if user is blocked, prompt that.
        - checks if the user has host permissions, if true output an embed with all the misc commands and host commands.
        - if user does not have host permissions the embed will just output the misc commands inside the embed.
        - warn users to not use commands they dont see in here or they might end up blocked from the bot.
    -!help command has been finalized, the reason why it is not flexible to show all available commands is to prevent users getting blocked for using commands they are not allowed to.
    -after many tests and alterations to the code, I decided to import a already made base bot I found online so that I would not have to recode the base of the bot from scratch again, credits for this code go to (https://github.com/MenuDocs/Discord.js-v12-Tutorials):
        -This completly broke the file system I had implemented before (FIXED).
    - found same bug again, but implemented new feautures to !ga:
        -!ga now has a 'create' sub command that creates the layout and stores that inside a json file.
        -locked all the sub commands to the ammount of args they require to run.
        -BUG: if the user tries to create a new file after finishing the previous one, it inputs the right GA array to the mons file but the array it creates is bugged as it keeps the last array used.

25-08-2020 and 26-08-2020 20h in both days -> total 114h:
    -Completely discarded how the !ga and !ntrade worked:
        -Reason: Saving the files inside a JSON was a good way to implement my logic at start but as the need for a file to be read and written in realtime without bot restarts, this meant that I could not store the info inside a file but actually inside a database, I altered the userSchema to accept an list and info camp, list stores the Pokemon and Info stores the hosts info.
    -Bugs found so far: NONE, 
        but the code might need a lot of optimization because the file that creates and edits the giveaway is too long it might be needed to be deconstructed and made into a Class instead of a big function if this brings out any issues, with this I can finaly declare the base for the bot complete, only thing left now is making an dinamic help command that excludes the host and admin commands from the rest of the users.
        -   Found a issue where if 2 users try to set a giveaway at the same time the connection to the database crashes, this might be fixed by implementing a function that only gets the data to store when sending to the database.

26-08-2020 start 00:00 -> 4:00 total 118:
    -Deployed the bot for more users for testing purpuses and found out the bot was not reading the prefix but only its length and fixed it.
    -Only issues after that were as expected if the user does not use the required params the bot does not store it correctly.
    - Things to still implement:
        - changing the admin command layout to accept the admin/owner commands like it displays them for help commands.(DONE)
        - Implementing a way to display random codes for each trade.(DONE)
        - Might need to improve on the userchecking methods to improve perfomance of the code because it hads redundancy to the code implementing the same logic anytime an user tries to use a locked command.
        - Make admin/owner commands flag users if they use them.
        -Implement a description param for the message so that users can personalize their giveaways.(DONE)
        -Implement a !raid command.

29-08-2020 23:00 -> 4:00 total: 123:
    - DogeBot is now online 24/7
    - Created a new bot so that I can test the updates in private on my server while the regular bot is online for how many servers want it to be into.
    - Made a big change inside of the admin/owner commands, I have to manually add admin to the config.json file, however it makes it possible for me to add multiple admin to the bot so that it does report to them whenever someone tries to use commands they are not allowed to.
    - Cleaned up the message output it no longer shows that lousy comma between each mon that is traded.
    - Implemented a !description command that allows the user to add a personalized description to their giveaway, if they dont have one set it defaults to the standart one.
    - Cleaned up the output of the help command.

30-08-2020: 
    - Added aliases to various commands and started to implement the userchecking on all of the commands.
    - Fixed an issue where the bot would not reply to the user the first time it interacted with it in all commands.
    - Made the help command only show the categories the user is allowed to use.
    - Pushed DogeBot v1.2.2 to the server with all of the mentioned fixes.
    - Created an new-version command to tell users when found bugs have been fixed.

31-08-2020:
    -Dogebot v1.2.3:
                    - Implemented a way for users to use random codes.
                    - Updated guide to show users how to use this feature.


DogeBot v1.2.4: 
    - Fixed an issue in the help command where it did not post when the user was not added to the db.
    - Added an Image command category that sends random pictures to the users DM.
    - Completly reviewed all the code to check for typos on the outputs.
    - Started to work on shiny raid commands to implement on v1.3


DogeBot v1.2.5:
    - Finalized the shiny raid commands mentioned before, and added an guide subcommand to all the host commands to explain users how to build their layouts.
    - Cleaned up my code redundancy that would not return if the args were not as expected in the giveaway commands, the raid command already has this built in.
    - Created an new scheema to store all the den info available right now, dens can be edited if needed.
    - Implemented an constant mongoDB connection wich in return makes the bot a lot more fast.
    - Cleaned up the user checking process with the update mentioned above.
    - Created an autoModerator Function that checks for user flags and flags and blocks users when they use commands they are not allowed to, this cleaned a lot of the code of the locked commands, and makes it easier to implement them.
    - Fixed following issues:
        -Bot not recognizing a mention as a prexif.
        -Bot not saying is prefix if he only is mentioned.
        -Whenever the bot is asked to run an command that does not exist it will reply that instead of ignoring the user.
